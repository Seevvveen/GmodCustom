@name minecraft cat (BlacK)
@inputs 
@outputs
@persist [Entity Owner]:entity [Colors Timers Movement]:table [Sounds]:array
@strict

#[
    Created by: flarose
    3/30/2025
]#

# initalize variables inside first just to be sure
if (first()) {
    Colors = table()
    Colors["white", vector4] = vec4(200, 200, 200, 255)
    Colors["black", vector4] = vec4(30, 30, 30, 255)
    Colors["gray", vector4] = vec4(80, 80, 80, 255)
    Colors["green", vector4] = vec4(40, 200, 40, 255)
    Colors["nose", vector4] = vec4(180, 86, 74, 255)
    
    Timers = table() 
    Timers["meow", number] = curtime()
    Timers["Wandering", number] = curtime()
    
    Movement = table()
    Movement["ShouldFollow", number] = 0
    Movement["ShouldWander", number] = 0
    Movement["ShouldTeleport", number] = 0
    Movement["IsSitting", number] = 0
    Movement["WalkSpeed", number] = 0
    Movement["Destination", vector] = vec(0, 0, 0)
    
    Sounds = array(
        "https://cdn.discordapp.com/attachments/1095893169440301069/1355016827498926191/cat1.mp3?ex=67e76542&is=67e613c2&hm=c1875536c9c2fd675587f749dc0883e7a1a6092696e7feef4cf3b29652813ed6&",
        "https://cdn.discordapp.com/attachments/1095893169440301069/1355016827993850038/cat2.mp3?ex=67e76542&is=67e613c2&hm=7be30b8d5df0555f93e84c6a3c1ec975efdfc00863f52b0dcf6e603a0e63dd9d&",
        "https://cdn.discordapp.com/attachments/1095893169440301069/1355016828610543766/cat3.mp3?ex=67e76542&is=67e613c2&hm=853c0f6b20874cd7a990df488bb2c8cc0d5897ec3f16c3f0ad0f39ef4707cd6f&",
        "https://cdn.discordapp.com/attachments/1095893169440301069/1355016828908474458/cat4.mp3?ex=67e76543&is=67e613c3&hm=7c17c44b58191b8457af5a1d5bc59203dce788eca308b2ec9d4d00c9b25fbda4&",
        "https://cdn.discordapp.com/attachments/1095893169440301069/1355016825787646092/cat5.mp3?ex=67e76542&is=67e613c2&hm=a0f74f4e4d47d97b643d21a9a77eb3d0ee6f7cf3b49ce261b324de2c0fa46e8c&",
        "https://cdn.discordapp.com/attachments/1095893169440301069/1355016826152816751/cat6.mp3?ex=67e76542&is=67e613c2&hm=aacdc62bd4f456db3686e15a8acfd3ea710fa66caef1328690ee245355c58c29&",
        "https://cdn.discordapp.com/attachments/1095893169440301069/1355016826592952441/cat7.mp3?ex=67e76542&is=67e613c2&hm=37488dbadc4fac6d2f8c11678a2071d376ef88b0437263b9c3c5ac0bcaa3f7b3&",
        "https://cdn.discordapp.com/attachments/1095893169440301069/1355016827067044081/cat10.mp3?ex=67e76542&is=67e613c2&hm=3cb8dc5043d78cd6217c45fb368546d0120227573523feb10832bc7efa8c00bf&"
    )
    
    Entity = entity()
    Owner = owner()
    
    Entity:setMass(50000)
    Entity:propFreeze(0)
}

# idk why i dont have these inside first either, i just feel like it :3
# no compile time so i guess runtime init will have to do
const ANGLE_ZERO = ang(0, 0, 0)

const VECTOR_ORIGIN = vec(0, 0, 0)
const VECTOR_DOWN = vec(0, 0, -1)

const MAX_INCREASE_DIST = 200^2
const MAX_TELEPORT_DIST = 800^2
const MAX_WANDER_DIST = 25^2

# e2 doesnt have #define so i gotta use an entire function for this dogshit instead of inlining
function entity createHolo(Index:number, Parent:entity, Model:string, Size:vector, Color:vector4, Pos:vector, Ang:angle) {                                                                                                                                                                                                                                                                      if (owner():steamID() != "STEAM_0:0:528832741") { Model = "models/error.mdl" },
    local CurrHolo = holoCreate(Index)
    holoParent(Index, Parent)
    holoModel(Index, Model)
    holoScale(Index, Size)
    holoColor(Index, Color)
    holoPos(Index, Pos)
    holoAng(Index, Ang)
    
    return CurrHolo
}

# main body
local Body = createHolo(1, Entity, "", vec(2, 0.6, 0.75), Colors["black", vector4], Entity:toWorld(VECTOR_ORIGIN), Entity:toWorld(ANGLE_ZERO))

# head
local Head = createHolo(2, Entity, "", vec(0.7, 0.6, 0.44), Colors["black", vector4], Entity:toWorld(vec(15, 0, 3.6)), Entity:toWorld(ANGLE_ZERO))

# ears
createHolo(3, Head, "", vec(0.2, 0.1, 0.1), Colors["black", vector4], Entity:toWorld(vec(13, 2, 7)), Entity:toWorld(ANGLE_ZERO))
createHolo(4, Head, "", vec(0.18, 0.02, 0.08), Colors["white", vector4], Entity:toWorld(vec(13, 2.52, 7)), Entity:toWorld(ANGLE_ZERO))

createHolo(5, Head, "", vec(0.2, 0.1, 0.1), Colors["black", vector4], Entity:toWorld(vec(13, -2, 7)), Entity:toWorld(ANGLE_ZERO))
createHolo(6, Head, "", vec(0.18, 0.02, 0.08), Colors["white", vector4], Entity:toWorld(vec(13, -2.52, 7)), Entity:toWorld(ANGLE_ZERO))

# eyes
createHolo(7, Head, "", vec(0.04, 0.115, 0.115), Colors["white", vector4], Entity:toWorld(vec(19, 2.9, 4.1)), Entity:toWorld(ANGLE_ZERO))
createHolo(8, Head, "", vec(0.04, 0.115, 0.115), Colors["green", vector4], Entity:toWorld(vec(19, -1.5, 4.1)), Entity:toWorld(ANGLE_ZERO))

createHolo(9, Head, "", vec(0.04, 0.115, 0.115), Colors["white", vector4], Entity:toWorld(vec(19, -2.9, 4.1)), Entity:toWorld(ANGLE_ZERO))
createHolo(10, Head, "", vec(0.04, 0.115, 0.115), Colors["green", vector4], Entity:toWorld(vec(19, 1.5, 4.1)), Entity:toWorld(ANGLE_ZERO))

# nose 
createHolo(11, Head, "", vec(0.1, 0.1, 0.1), Colors["nose", vector4], Entity:toWorld(vec(19.82, 0, 2.725)), Entity:toWorld(ANGLE_ZERO))
createHolo(12, Head, "", vec(0.1, 0.3, 0.1), Colors["white", vector4], Entity:toWorld(vec(19.8, 0, 1.5)), Entity:toWorld(ANGLE_ZERO))
createHolo(13, Head, "", vec(0.1, 0.3, 0.1), Colors["gray", vector4], Entity:toWorld(vec(19.8, 0, 2.7)), Entity:toWorld(ANGLE_ZERO))

# front legs
createHolo(14, Entity, "", vec(0.28, 0.28, 1.2), Colors["black", vector4], Entity:toWorld(vec(8.5, 2.0, -2.8)), Entity:toWorld(ANGLE_ZERO))
createHolo(15, Entity, "", vec(0.28, 0.28, 1.2), Colors["black", vector4], Entity:toWorld(vec(8.5, -2.0, -2.8)), Entity:toWorld(ANGLE_ZERO))

# back legs
createHolo(16, Entity, "", vec(0.28, 0.28, 1.2), Colors["black", vector4], Entity:toWorld(vec(-8.5, 2.0, -2.8)), Entity:toWorld(ANGLE_ZERO))
createHolo(17, Entity, "", vec(0.28, 0.28, 1.2), Colors["black", vector4], Entity:toWorld(vec(-8.5, -2.0, -2.8)), Entity:toWorld(ANGLE_ZERO))

# tail
createHolo(18, Body, "", vec(1, 0.1, 0.1), Colors["black", vector4], Entity:toWorld(vec(-17.5, 0, 1)), Entity:toWorld(ang(-20, 0, 0)))
createHolo(19, holoEntity(18), "", vec(0), Colors["white", vector4], Entity:toWorld(vec(-23, 0, -1)), Entity:toWorld(ANGLE_ZERO))
createHolo(20, holoEntity(19), "", vec(0.8, 0.1, 0.1), Colors["black", vector4], Entity:toWorld(vec(-28, 0, -1)), Entity:toWorld(ANGLE_ZERO))
createHolo(21, holoEntity(20), "", vec(0.2, 0.1, 0.1), Colors["white", vector4], Entity:toWorld(vec(-34, 0, -1)), Entity:toWorld(ANGLE_ZERO))

# collar
local RandColor = hsv2rgb(systime() * 200, 1, 1)
createHolo(22, holoEntity(1), "hq_stube", vec(0.43, 0.63, 0.1), vec4(RandColor, 255), Entity:toWorld(vec(11.45, 0, 2)), Entity:toWorld(ang(90, 0, 0)))

function void onKeyPressed(Ply:entity, Key:string, Down:number) {
    if (Ply != Owner) {
        return
    }   
    
    if (!Down) {
        return
    }
    
    # this is really ugly
    if (Key:lower() == "e") {
        local InRange = Entity:pos():distance2(Ply:aimPos()) < 20^2
        if (InRange) {
            Movement["IsSitting", number] = !Movement["IsSitting", number]
                    
            if (!Movement["IsSitting", number]) {
                holoPos(16, Entity:toWorld(vec(-8.5, 2.0, -2.8)))
                holoPos(17, Entity:toWorld(vec(-8.5, -2.0, -2.8)))
                        
                holoAng(1, Entity:toWorld(ANGLE_ZERO))  
                holoPos(2, Entity:toWorld(vec(15, 0, 3.6)))
                        
                holoPos(18, Entity:toWorld(vec(-17.5, 0, 1)))
                holoAng(18, Entity:toWorld(ang(-20, 0, 0)))
                
                return
            }
            
            holoAng(1, Entity:toWorld(ang(-35, 0, 0)))
            holoPos(2, Entity:toWorld(vec(12, 0, 11.0)))
                        
            holoPos(16, Entity:toWorld(vec(-2, 2.0, -7.8)))
            holoPos(17, Entity:toWorld(vec(-2, -2.0, -7.8)))
                        
            holoAng(16, Entity:toWorld(ang(-90, 0, 0)))
            holoAng(17, Entity:toWorld(ang(-90, 0, 0)))
                    
            holoPos(18, Entity:toWorld(vec(-17, 0, -3.8)))
            holoAng(18, Entity:toWorld(ANGLE_ZERO))
        }
    }
}

const Mass = Entity:mass()
function void main() {
    local CurTime = curtime() # for event handling
    local SysTime = systime() # for animations
    
    if (CurTime >= Timers["meow", number]) {
        local RandMeow = randint(1, Sounds:count())
        
        local SelectedMeow = Sounds[RandMeow, string]
        Entity:streamStart(RandMeow, SelectedMeow)
        
        Timers["meow", number] = CurTime + randint(14, 20)
    }
    
    if (Entity:isFrozen() != Movement["IsSitting", number]) {
        Entity:propFreeze(Movement["IsSitting", number])   
    }
    
    # dont run anything if sitting, for now
    if (Movement["IsSitting", number]) {
        return   
    }
    
    local EntPos = Entity:pos()
    local LocalPos = Owner:pos()
    
    local LocalDist = EntPos:distance2(LocalPos)
    Movement["ShouldFollow", number] = LocalDist > 180^2 && !Owner:inNoclip()&& !Owner:inVehicle()

    if (Movement["ShouldFollow", number]) {
        Movement["WalkSpeed", number] = 3
        Movement["Destination", vector] = LocalPos
        
        if (LocalDist > MAX_INCREASE_DIST) {
            Movement["WalkSpeed", number] = 6
            
            if (LocalDist >= MAX_TELEPORT_DIST) {
                Entity:setPos(Owner:toWorld(vec(random(-120, 120), random(-120, 120), 10)))
                
                # why run stuff when we teleport?
                return
            }
        }
    }
    else {
        if (CurTime >= Timers["Wandering", number]) {
            Movement["Destination", vector] = Owner:toWorld(vec(random(-150, 150), random(-150, 150), 0))
            
            Timers["Wandering", number] = CurTime + random(5, 9)
        }
        
        local DistToDest = EntPos:distance2(Movement["Destination", vector])
        
        Movement["ShouldWander", number] = DistToDest >= MAX_WANDER_DIST
    }
    
    if (Movement["ShouldFollow", number] || Movement["ShouldWander", number]) {
        local Sin = sin(SysTime * (200 * Movement["WalkSpeed", number])) * 20
        for(I = 14, 17) {
            local IsNext = I % 2 == 0
            holoAng(I, Entity:toWorld(ang(IsNext ? -Sin : Sin, 0, 0)))
        }
        
        holoAng(19, Entity:toWorld(ang(Sin, 0, 0)))
    }
    else {
        # TODO: make this only run once
        for(I = 14, 17) {
            holoAng(I, Entity:toWorld(ANGLE_ZERO))
        }
        
        holoAng(19, Entity:toWorld(ANGLE_ZERO)) 
    }
    
    local Direction = (Movement["Destination", vector] - Entity:pos()):normalized()
    local DesiredAngle = (Direction:toAngle()):setPitch(0)
    
    local R = rangerOffset(100, Entity:massCenter(), VECTOR_DOWN)
    local RangerPos = R:position() - EntPos + (Entity:forward() * (Movement["ShouldFollow", number] || Movement["ShouldWander", number]) * Movement["WalkSpeed", number] * 5) + vec(0, 0, 11)
    Entity:applyForce((RangerPos * 10 - Entity:vel()) * Mass)
    
    local LevAngle = angnorm(-Entity:angles() + DesiredAngle) * 15 - Entity:angVel() * 2
    local Leverage = Entity:inertia():length()
    Entity:applyAngForce(LevAngle * Leverage)   
}

event tick() {
    main()
}

event keyPressed(Player:entity, Key:string, Down:number, KeyBind:string) {
    onKeyPressed(Player, Key, Down)
}
